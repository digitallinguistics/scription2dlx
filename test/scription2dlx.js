!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.scription2dlx=e():t.scription2dlx=e()}(this,function(){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";function r(t){return"string"==typeof t}n.r(e);const o={lit:["[","]"],phon:["[","]"],txn:["/","/"]};function s(t,e,n){return n.startsWith(t)&&n.endsWith(e)?n.slice(1,n.length-1).trim():n}function a(t,e){const n=o[t];if(r(e))return s(...n,e);const a=Object.entries(e).map(([t,e])=>[t,s(...n,e)]);return Object.fromEntries(a)}function u(t){const e=t.match(/^\\(?<code>\S+)(?:\s|$)/u);return e?e.groups.code:null}function i(t){const[e]=t.split("-",1);return e}function c(t,e){const n=Object.entries(e).filter(([e])=>t.includes(i(e)));return n.length?Object.fromEntries(n):null}function l(t,e){const n=[];let r=t.exec(e);for(;null!==r;)n.push(r.groups),r=t.exec(e);return n.filter(Boolean)}const f=/^[-A-Za-z0-9]+$/u;const p=/^(((en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang))|((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+))$/u;function h(t){return p.test(t)}const m=["gl","lit","tln","wlt"];function g(t){const e=t.some(t=>r(t)),n=t.every(t=>r(t));if(e&&!n)throw new Error("If one line in an utterance has a backslash code, all lines in the utterance must have backslash codes.");const o=t.filter(Boolean),s=o.map(i);o.forEach(t=>{if(!function(t){return f.test(t)}(t))throw new Error(`The backslash code ${t} is invalid. Only characters A-Z, a-z, 0-9, and hyphens are allowed. Diacritics are not permitted.`)}),o.reduce((t,e)=>{const n=t.get(e)||0;return t.set(e,n+1),t},new Map).forEach((t,e)=>{if("n"!==e&&t>1)throw new Error(`The ${e} code appears more than once in the utterance. Each backslash code may only appear once.`)});const a=s.some(t=>"m"===t),u=s.some(t=>"gl"===t);if((a||u)&&(!a||!u))throw new Error("If either the morphemes or glosses line is present, the other must be present as well.");o.forEach((t,e)=>{const n=s[e];if(!m.includes(n))return;const r=t.replace(`${n}-`,"");if(r&&!h(r))throw new Error(`Language codes must be valid IETF language tags. The tag ${r} is not valid.`)})}function d(t,e){return"n"!==i(t)?t:t.replace("n",`n-${e+1}`)}function b(t){try{const e=/\r?\n/gu,n=t.split(e).map(t=>t.trim()),r=n.map(u);if(g(r),!r.filter(Boolean).length){const t=n.length;if(2===t)return["txn","tln"];if(3===t)return["m","gl","tln"];if(t>=4)return["txn","m","gl","tln"].fill("n",4);throw new Error("Cannot infer an interlinear gloss schema for utterances with one line.")}return r.map(d)}catch(e){throw e.name=b.name,e.message=`${e.message}\n\nUtterance text:\n\n${t}`,e}}function w(t,e){const n=c([t],e);if(!n)return null;const r=Object.keys(n);return 1===r.length&&r[0]===t?e[t]:Object.entries(n).reduce((e,[n,r])=>{return e[n.replace(`${t}-`,"")]=r,e},{})}function y(t,e=""){return t.length?t.reduce((t,n)=>r(n)?`${t}${e}${n}`:(Object.entries(n).forEach(([n,r])=>{t[n]+=`${e}${r}`}),t)):""}function j(t){const e=Object.values(t),n=Math.max(...e.map(t=>t.length));if(!e.every(t=>t.length===n))throw new Error("All morpheme and glosses lines must have the same number of words and morphemes.")}function v(t){const e=Math.max(...Object.values(t).map(t=>t.length)),n=[];for(let r=0;r<e;r++){const e=Object.entries(t).reduce((t,[e,n])=>(t[e]=n[r],t),{});n.push(e)}return n}function x(t,e){const n=function(t){const e=/---(?<header>.+?)---/gsu.exec(t);return e?e.groups.header.trim():null}(t);if(null===n)return{};if(e){const t=e(n);return function(t){if(!t)throw new Error("The metadata header must not be empty.");if(r(t))throw new Error("The metadata header could not be parsed as a JavaScript Object.");const{title:e,utterances:n}=t;if(!e)throw new Error('The metadata header must have a "title" attribute.');if(n)throw new Error('The metadata header must not have an "utterances" attribute.')}(t),t}return{header:n}}var O=["gl","lit","m","n","phon","sp","tln","trs","txn","w"];const $=/^[A-Za-z0-9]+$/u;function E(t){if(!t)return null;if(e=t,!$.test(e))throw new Error(`${t} is not a valid value for the speaker line.`);var e;return t}function k(t,e){let n=w(t,e);return n?(n=a("txn",n),n=r(o=n)?o.replace(/\s+/gu," "):Object.entries(o).reduce((t,[e,n])=>(t[e]=n.replace(/\s+/gu," "),t),{})):null;var o}function z(t){const[{gloss:e}]=t;if(!e)return[];const n=r(e)?"string":Object.keys(e)[0],o=function(t,e){if(!e.length)return[];const n=e.map(({gloss:e})=>"string"===t?e:e[t]).reduce((t,e)=>{const n=t.get(e)||0;return t.set(e,n+1),t},new Map);return Array.from(n.entries()).filter(([,t])=>t>1).map(([t])=>t)}(n,t);return o?o.map(e=>t.filter(({gloss:t})=>r(t)?t===e:t[n]===e)):[]}function A(t){return Object.entries(t).reduce((t,[e,n])=>(t[e]=function(t){return l(/(?<bracketed>\[.*?\u005D)|(?<unbracketed>[^-=~\s]+)/gu,t).map(({bracketed:t,unbracketed:e})=>t||e)}(n),t),{})}function Z(t,e){const{gl:n,m:r}=t,o=c([n,r],e);if(!o)return[];const s=A(o);j(s);let a=v(s).flatMap(t=>(function(t,e){const n=/(?<pre>.*)<(?<infix>.+)>(?<post>.*)/u,r=Object.entries(e),o=r.find(([e])=>i(e)===t);if(!o)return e;const[,s]=o,a=s.match(n);if(!a)return e;const u=a.groups.pre?"right":"left",c=r.reduce(([t,e],[r,o])=>{const{infix:s,pre:a,post:u}=o.match(n).groups;return t[r]=s,e[r]=`${a}${u}`,[t,e]},[{},{}]);return"left"===u?c:c.reverse()})(n,t)).map(t=>{const e=w(r,t)||"",o=w(n,t);return{transcription:e,...o?{gloss:o}:{}}});if(!a.length)return[];const u=z(a);a=function(t,e){const n=new Set(e);return t.filter(t=>!n.has(t))}(a,u.flat());const l=u.map(t=>({transcription:y(t.map(({transcription:t})=>t),"â€¦"),analysis:t[0].analysis,gloss:t[0].gloss}));return[...a,...l]}const T=["gl","m","w","wlt"];function B(t){return Object.entries(t).reduce((t,[e,n])=>(t[e]=function(t){return l(/(?<bracketed>\[.*?\u005D)|(?<unbracketed>[^\s]+)/gu,t).map(({bracketed:t,unbracketed:e})=>t||e)}(n),t),{})}function M(t,e){const n=c(T.map(e=>t[e]),e);if(!n)return[];const r=B(n);return j(r),v(r).map(e=>(function(t,e){const{gl:n,m:r,w:o,wlt:s}=t,a=w(o,e)||"",u=w(r,e),i=w(n,e),c=w(s,e),l=Z(t,e);return{transcription:a,...u?{analysis:u}:{},...i?{gloss:i}:{},...c?{literal:c}:{},...l.length?{morphemes:l}:{}}})(t,e))}const S=/^\\(?:(?:\w|-)+)(?<lineData>.*)$/u,D=/\r?\n/gu;function _(t,e,n){try{const{lit:o,n:s,phon:l,tln:f,trs:p,txn:m,sp:g}=n,d=t.split(D).map(t=>t.trim());d.map(u).filter(Boolean).length&&(e=b(t));const j=function(t,e){return t.reduce((t,n,r)=>{const o=e[r]||`n-${r}`,s=n.match(S),a=(s?s.groups.lineData:n).trim();return t[o]=a,t},{})}(d,e);if(!Object.values(j).every(Boolean))return null;const v=E(j[g]),x=function(t,e){return w(t,e)||null}(p,j);let $=k(m,j);const z=(r=j[l])?a("phon",r):null,A=function(t,e){let n=w(t,e);return n?n=a("lit",n):null}(o,j),Z=function(t,e){const n=w(t,e);return n||null}(f,j)||"",T=function(t,e){const n=c(t,e);if(!n)return[];const r=new RegExp(`${t}-[0-9]`,"u"),o=/^(?:\s*(?<source>.+?)\s*:\s*)?(?<text>.+)$/u;return Object.entries(n).map(([e,n])=>{const s=e.replace(r,t),[,a="en"]=s.split("-",2),{source:u,text:i}=n.match(o).groups;if(!h(a))throw new Error(`The ${a} language tag is invalid. It must be a valid IETF language tag.`);return{language:a,source:u,text:i}})}(s,j),B=M(n,j),I=function(t,e){const n=Object.keys(e),r=O.map(e=>t[e]),o=n.map(i).filter(t=>!r.includes(t)).reduce((t,n)=>(t[n]=w(n,e),t),{}),s=[t.phon,t.sp];return{...n.filter(t=>{const e=i(t),n=s.includes(e),r=t.startsWith(`${e}-`);return n&&r}).reduce((t,n)=>(t[n]=e[n],t),{}),...o}}(n,j);if(!$){$=y(B.map(({transcription:t})=>t)," ")||""}return{...v?{speaker:v}:{},...x?{transcript:x}:{},transcription:$,...z?{phonetic:z}:{},...A?{literal:A}:{},translation:Z,...T.length?{notes:T}:{},...B.length?{words:B}:{},...I}}catch(e){const n=t.split(D).map(t=>t.trim()).join("\n");throw e.name=_.name,e.message=`${e.message}\n\nUtterance text:\n\n${n}`,e}var r}n.d(e,"default",function(){return P});const I={sp:"sp",trs:"trs",txn:"txn",w:"w",phon:"phon",m:"m",gl:"gl",wlt:"wlt",lit:"lit",tln:"tln",n:"n"};function P(t="",{codes:e={},parser:n}={}){if(""===t.trim())return{};if(!(e instanceof Object&&Object.values(e).every(r))){const t=new TypeError('The "codes" option must be an Object whose values are Strings.');throw t.name=P.name,t}const o=Object.assign({},I,e||{});return{...x(t,n),utterances:function(t,e){const n=t.split(/---/gsu).map(t=>t.trim()).pop();if(!n)return[];const r=/(?:[ \t\v\u00a0\u1680\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff]*\r?\n){2,}/gsu,o=b(n.split(r)[0]);return n.split(r).map(t=>_(t,o,e)).filter(Boolean)}(t,o)}}}]).default});